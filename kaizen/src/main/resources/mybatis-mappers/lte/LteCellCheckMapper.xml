<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boot.kaizen.dao.lte.LteCellCheckDao">

	
	
	<select id="find" resultType="LteCellCheck">
		 select lp.* 
		 from
		 lte_cell_check lp 
		 where 1=1
		 <if test="map.projId != null and map.projId != ''">
            and lp.projId = #{map.projId}
        </if>
		 <if test="map.eNodeBID != null and map.eNodeBID != ''">
            and lp.eNodeBID  = #{map.eNodeBID}
        </if>
		 <if test="map.testDate != null and map.testDate != ''">
            and lp.testDate = #{map.testDate}
        </if>
		 order by lp.createTime desc
	</select>
	<select id="findListByMenodeBID" resultType="LteCellCheck">
		 select lp.* 
		 from
		 lte_cell_check lp 
         where  lp.eNodeBID =#{mENodeBID}
	</select>
	
	<delete id="delete">
		 delete from lte_cell_check
		 where id in
		 <foreach collection="idsArray" index="index" item="item"
            open="(" separator="," close=")">
            #{item}
        </foreach>
	</delete>
	
	<delete id="deleteByeNodeBID">
		 delete from lte_cell_check
		 where eNodeBID =#{mENodeBID}
	</delete>
	
	<insert id ="batchInsert" parameterType="java.util.List" >
           insert into lte_cell_check
           (
			userId
			,eNodeBID
			,communityName  
			,testDate
			,csfbTestCount
			,csfbFallSuccessCount
			,csfbFallRate
			,goodFtpUpAverageRsrp
			,goodFtpUpAverageSinr
			,goodFtpUpRate
			,generalFtpUpAverageRsrp
			,generalFtpUpAverageSinr
			,generalFtpUpRate
			,poorFtpUpAverageRsrp
			,poorFtpUpAverageSinr
			,poorFtpUpRate
			,goodFtpDownAverageRsrp
			,goodFtpDownAverageSinr
			,goodFtpDownRate
			,generalFtpDownAverageRsrp
			,generalFtpDownAverageSinr
			,generalFtpDownRate
			,poorFtpDownAverageRsrp
			,poorFtpDownAverageSinr
			,poorFtpDownRate
			,pci
			,tac
			,cellId
			,frequency
			,projId
			,createTime
			)
           values
            <foreach collection ="cellChecks" item="item" index= "index" separator =",">
                (
                	#{item.userId}
					,#{item.eNodeBID}
					,#{item.communityName}
					,#{item.testDate}
					,#{item.csfbTestCount}
					,#{item.csfbFallSuccessCount}
					,#{item.csfbFallRate}
					,#{item.goodFtpUpAverageRsrp}
					,#{item.goodFtpUpAverageSinr}
					,#{item.goodFtpUpRate}
					,#{item.generalFtpUpAverageRsrp}
					,#{item.generalFtpUpAverageSinr}
					,#{item.generalFtpUpRate}
					,#{item.poorFtpUpAverageRsrp}
					,#{item.poorFtpUpAverageSinr}
					,#{item.poorFtpUpRate}
					,#{item.goodFtpDownAverageRsrp}
					,#{item.goodFtpDownAverageSinr}
					,#{item.goodFtpDownRate}
					,#{item.generalFtpDownAverageRsrp}
					,#{item.generalFtpDownAverageSinr}
					,#{item.generalFtpDownRate}
					,#{item.poorFtpDownAverageRsrp}
					,#{item.poorFtpDownAverageSinr}
					,#{item.poorFtpDownRate}
					,#{item.pci}
					,#{item.tac}
					,#{item.cellId}
					,#{item.frequency}
					,#{item.projId}
					,#{item.createTime}
                )
            </foreach >
     </insert>
</mapper>